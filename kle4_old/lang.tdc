# National languages and editor

keyboard input language i_lang (types are IBM pc local lang, ISO, utf8)
font or output language o_lang (ibmpc, ISO, utf8)
document language	->b_lang (0=utf8, ISO local, IBM pc local)
local language	local_lang (ISO local or IBM pc local)

# languages can be
ISO variant, utf8, IBM PC variant, EBCDIC variant, utf16, other ...

# output can be on
editor canvas (defined by font or o_lang) (convert from document lang to o_lang)
editor message line (o_lang) (convert from i_lang to o_lang)
system defined by input language (no convertion)

in any case  provide mechanisms to
: input binary or escaped sequences
: output binary control codes to output (message line)

In hex mode convert all bytes to corresponding iso local.

# convertions in general
! if keyboard is utf and document is in local lang then convert in editor??
! if font is in utf and document is in oem/iso local then convert
! if font is in utf, in dir mode and document name is in oem/iso then convert before showing
! if font is in utf and in hex mode then convert upper 8-bit chars to utf

# convertions for gtk1
! font is in local ISO. no convertions on input. (o_lang !=0 )
! show utf documents as binary! (it old to try to make it right!)

# convertions for xlib
! font is in local ISO. no convertions (o_lang !=0) 

# convertions for curses
! if font in local iso/oem (o_lang>0). No conversions! (maybe convert to correct charset ?? i_lang!=o_lang)
! if font in utf (o_lang=0)
	! if document is oem/iso convert to utf (b_lang > 0) (b_lang -> utf8)
	! if in dir mode and document name is in oem/iso then convert before showing (local_lang -> utf8)
	! if in hex mode then convert upper 8-bit chars to utf (local_lang -> utf8)
#convertions for gtk2
; font is in utf-8
	! if document is oem/iso convert to utf (b_land -> utf8)
	! if in dir mode and document name is in oem/iso then convert before showing (local_lang -> utf8)
	! if in hex mode then convert upper 8-bit chars to utf (local_lang -> utf8)
; for message line
	! if message string if not utf correct then convert from local to utf (local_lang -> utf8)



